{"version":3,"file":"static/js/290.6d8c292c.chunk.js","mappings":"2XAWMA,EAAwBC,EAAAA,YAAiB,WAQ5CC,GAAQ,IAPTC,EAAM,EAANA,OACAC,EAAQ,EAARA,SACAC,EAAS,EAATA,UACAC,EAAK,EAALA,MACAC,EAAW,EAAXA,YACAC,EAAQ,EAARA,SACGC,GAAK,YAEFC,EAAYP,GAAUC,EAAW,OAASO,EAAAA,EAChD,OAAoBC,EAAAA,EAAAA,KAAK,KAAM,CAC7BV,IAAKA,EACLI,MAAOA,EACPD,UAAWQ,IAAWR,EAAW,YAAa,CAC5CF,OAAAA,EACAC,SAAAA,IAEFI,UAAuBM,EAAAA,EAAAA,MAAMJ,GAAW,gBACtCL,UAAW,aACRI,GAAK,IACRD,SAAU,CAACA,EAAUL,GAAUI,IAA4BK,EAAAA,EAAAA,KAAK,OAAQ,CACtEP,UAAW,kBACXG,SAAUD,SAIlB,IACAP,EAASe,aAhCY,CACnBZ,QAAQ,EACRC,UAAU,EACVG,YAAa,aA8BfP,EAASgB,YAAc,WACvB,QACA,SAASC,EAAaC,EAAMC,GAA4B,IAAdC,EAAQ,UAAH,6CAAGF,EAC1CG,EAAsBpB,EAAAA,YAAiB,WAG1CC,GAAG,IAFJM,EAAQ,EAARA,SACGC,GAAK,mBACcK,EAAAA,EAAAA,MAAMd,GAAU,kBACnCS,GAAK,IACRP,IAAKA,EACLM,SAAU,EAAcI,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfJ,SAAUA,GAAYW,KACPP,EAAAA,EAAAA,KAAK,OAAQ,CAC5BP,UAAW,kBACXG,SAAUY,OAEZ,IAEF,OADAC,EAAOL,YAAcE,EACdG,CACT,CACO,IAAMC,EAAQL,EAAa,QAAS,QAC9BM,EAAON,EAAa,OAAQ,SAAK,YACjCO,EAAWP,EAAa,WAAY,SAAK,QACzCQ,EAAOR,EAAa,OAAQ,UAC5BS,EAAOT,EAAa,OAAQ,Q,kCClDnCU,EAA0B1B,EAAAA,YAAiB,WAK9CC,GAAQ,IAJT0B,EAAQ,EAARA,SACAvB,EAAS,EAATA,UACAwB,EAAI,EAAJA,KACGpB,GAAK,YAEFqB,GAAoBC,EAAAA,EAAAA,IAAmBH,EAAU,cACvD,OAAoBhB,EAAAA,EAAAA,KAAK,MAAM,gBAC7BV,IAAKA,GACFO,GAAK,IACRJ,UAAWQ,IAAWR,EAAWyB,EAAmBD,GAAQ,GAAJ,OAAOC,EAAiB,YAAID,MAExF,IACAF,EAAWX,YAAc,aACzB,MAAegB,OAAOC,OAAON,EAAY,CACvCL,MAAAA,EACAC,KAAAA,EACAC,SAAAA,EACAU,KAAMlC,EACNyB,KAAAA,EACAC,KAAAA,I,cC9BK,SAASS,EAAiBC,GAC/B,IAAMC,EAAQL,OAAOM,OAAOF,GAASG,WAAU,SAAAC,GAAE,OAAIA,IAAOC,EAAAA,EAAQ,IACpE,OAAkB,IAAXJ,EAAeA,EAAQ,EAAIA,CACpC,CAEO,SAASK,EAAsBC,GACpC,OAAOA,EAAUA,EAAUC,OAAS,GAAGC,EACzC,CAEO,SAASC,EAAmBC,EAAYC,GAC7C,OAAOD,IAAOC,CAChB,C,cC8BA,MAvCA,SAAsB,GAAyD,IAAxDC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACpD,GAAgCC,EAAAA,EAAAA,UAAiBD,GAAO,eAAjDE,EAAQ,KAAEC,EAAW,KACtBC,EAAqB,SAACC,GAC1BF,EAAYE,EAAEC,OAAOb,GACvB,EAuBA,OAVAc,EAAAA,EAAAA,YAAU,WACRJ,EAAYH,EACd,GAAG,CAACA,KASF,UAACQ,EAAA,EAAI,CAACvD,UAAWQ,IAAW,gCAAiCgD,SAPxC,SAACJ,GACtBA,EAAEK,iBACFL,EAAEM,kBACFZ,EAAYF,EAAUK,EACxB,EAGwF,WACpF,SAACM,EAAA,QAAU,CAACvD,UAAWQ,IAAW,kBAAkB,SAAEoC,EAASA,YAC/D,SAACW,EAAA,QAAU,UAxBOX,EAASe,QAAQC,KAAI,SAACzB,EAAI0B,GAAC,OAAK,SAACN,EAAA,QAAU,CAC/DO,KAAK,QACLtB,GAAIL,EAAGK,GACPzB,MAAOoB,EAAG4B,KACVlD,KAAK,WAELmD,UAAQ,EACRC,QAAShB,IAAad,EAAGK,GACzB0B,SAAUf,GAHLU,EAIL,OAkBE,SAAC7C,EAAA,EAAM,CAAChB,UAAWQ,IAAW,2CACtBsD,KAAK,SAAQ,SAAEjB,EAAS,SAAW,WAGjD,E,UCUA,MAzCA,WACE,IAAOP,GAAa6B,EAAAA,EAAAA,KAAb7B,UACP,GAA8CU,EAAAA,EAAAA,UAAiB,GAAE,eAA1DoB,EAAe,KAAEC,EAAkB,KAC1C,GAA8BrB,EAAAA,EAAAA,UCZzB,SAAwBV,GAC7B,OAAOX,OAAO2C,YAAYhC,EAAUsB,KAAI,SAAAzB,GAAE,MAAI,CAACA,EAAGK,GAAI,GAAG,IAC3D,CDUiE+B,CAAejC,IAAW,eAAlFP,EAAO,KAAEyC,EAAU,KACnBC,GAAaC,EAAAA,EAAAA,KAAbD,UACDE,GAAWC,EAAAA,EAAAA,MAwBjB,OACE,iBAAK5E,UAAWQ,IAAW,yDAAyD,WAClF,SAAC,EAAU,CAACgB,KAAK,KAAI,SAtBkBc,EAAUsB,KAAI,SAACzB,EAAI0B,GAAC,OAC7D,SAAC,OAAe,CAAS9D,SAAU8D,EAAI/B,EAAiBC,GAAU8C,QAAS,kBAHhD,SAAChB,GAAS,OAAKQ,EAAmBR,EAAE,CAGkBiB,CAAqBjB,EAAE,EACvF/D,OAAQ+D,IAAMO,EAAgB,SAC5CP,EAAI,GAFeA,EAGJ,OAmBhB,gBAAK7D,UAAWQ,IAAW,6CAA6C,UACtE,SAAC,EAAY,CAACoC,SAAUN,EAAU8B,GACpBvB,OAAQJ,EAAmBJ,EAAsBC,GAAYA,EAAU8B,GAAiB5B,IACxFM,YAZA,SAACF,EAAqBK,GACxC,IAAM8B,EAAapD,OAAO2C,YAAY3C,OAAOqD,QAAQjD,GAAS6B,KAAI,+BAAEqB,EAAU,KAAEC,EAAC,YAAMD,IAAerC,EAASJ,GAAK,CAACyC,EAAYhC,GAAY,CAACgC,EAAYC,EAAE,KAC5JV,EAAWO,GACXtC,EAAmBG,EAASJ,GAAIH,EAAsBC,IAXnC,SAACP,GACpB0C,EAAU1C,EAASoD,EAAAA,GAAAA,+BACnBR,EAAS,gBACX,CAQsES,CAAaL,GANjFV,GAAmB,SAAAgB,GAAC,QAAMA,CAAC,GAO7B,EAQ8CtC,OAAQhB,EAAQO,EAAU8B,GAAiB5B,UAI3F,EEzBA,MAjBA,WACE,IAAO8C,GAAgBZ,EAAAA,EAAAA,KAAhBY,aACAhD,GAAa6B,EAAAA,EAAAA,KAAb7B,UAMP,OACE,gBAAKtC,UAAWQ,IAAW,2BAA2B,SACnD8B,EAAUC,OAAS,GAChB,SAAC,EAAa,KACd,SAACvB,EAAA,EAAM,CAAC6D,QARI,WAClBS,EAAaH,EAAAA,GAAAA,8BACf,EAMsCnF,UAAWQ,IAAW,YAAY,SAAC,WAG3E,C","sources":["../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","utils/quiz.ts","pages/quiz/questionChain/questionForm/questionForm.tsx","pages/quiz/questionChain/questionChain.tsx","models/questionChain.ts","pages/quiz/quiz.tsx"],"sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active,\n  disabled,\n  className,\n  style,\n  activeLabel,\n  children,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : Anchor;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: \"page-link\",\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","import {NO_VALUE} from \"../models/store/auth\";\nimport {IQuestion} from \"../models/store/quiz\";\n\nexport function findLastQuestion(answers: Record<string, string>): number {\n  const index = Object.values(answers).findIndex(it => it === NO_VALUE)\n  return index === -1 ? index + 1 : index;\n}\n\nexport function findLastestQuestionId(questions: IQuestion[]): string {\n  return questions[questions.length - 1].id\n}\n\nexport function compareQuestionsId(q1: string, q2: string): boolean {\n  return q1 === q2;\n}","import React, {useEffect, useState} from \"react\";\nimport {IQuestionForm} from \"../../../../models/questionForm\";\nimport {Button, Form} from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\nfunction QuestionForm({question, isLast, applyAnswer, answer}: IQuestionForm) {\n  const [answerId, setAnswerId] = useState<string>(answer);\n  const handleChangeAnswer = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    setAnswerId(e.target.id)\n  }\n\n  const answers = () => question.options.map((it, i) => <Form.Check\n    type='radio'\n    id={it.id}\n    label={it.text}\n    name='question'\n    key={i}\n    required\n    checked={answerId === it.id}\n    onChange={handleChangeAnswer}\n  />)\n\n  useEffect(() => {\n    setAnswerId(answer)\n  }, [answer])\n\n  const submitQuestion = (e: any): void => {\n    e.preventDefault();\n    e.stopPropagation();\n    applyAnswer(question, answerId)\n  }\n\n  return (\n    <Form className={classNames('flex-center flex-column fs-6')} onSubmit={submitQuestion}>\n      <Form.Label className={classNames(\"mb-5 text-bold\")}>{question.question}</Form.Label>\n      <Form.Group>\n        {answers()}\n      </Form.Group>\n      <Button className={classNames(\"position-absolute position-right-bottom\")}\n              type='submit'>{isLast ? \"Finish\" : \"Next\"}</Button>\n    </Form>\n  )\n}\n\nexport default QuestionForm;","import React, {useState} from \"react\";\nimport classNames from \"classnames\";\nimport {useQuizSelectors} from \"../../../store/selectors/quiz\";\nimport {Pagination} from \"react-bootstrap\";\nimport {initialAnswers} from \"../../../models/questionChain\";\nimport {compareQuestionsId, findLastestQuestionId, findLastQuestion} from \"../../../utils/quiz\";\nimport QuestionForm from \"./questionForm/questionForm\";\nimport {IQuestion, quizTypes} from \"../../../models/store/quiz\";\nimport {useActions} from \"../../../hooks/useActions\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction QuestionChain() {\n  const {questions} = useQuizSelectors();\n  const [currentQuestion, setCurrentQuestion] = useState<number>(0);\n  const [answers, setAnswers] = useState<Record<string, string>>(initialAnswers(questions));\n  const {checkQuiz} = useActions();\n  const navigate = useNavigate();\n\n  const handleChooseQuestion = (i: number) => setCurrentQuestion(i)\n\n  const questionChain = (): JSX.Element[] => questions.map((it, i) =>\n    <Pagination.Item key={i} disabled={i > findLastQuestion(answers)} onClick={() => handleChooseQuestion(i)}\n                     active={i === currentQuestion}>\n      {i + 1}\n    </Pagination.Item>)\n\n  const checkAnswers = (answers: Record<string, string>): void => {\n    checkQuiz(answers, quizTypes.GENERAL_KNOWLEDGE_FACTFULNESS);\n    navigate('/quiz/results');\n  }\n  const updateAnswers = (): void => {\n    setCurrentQuestion(s => ++s)\n  }\n\n  const applyAnswer = (question: IQuestion, answerId: string): void => {\n    const newAnswers = Object.fromEntries(Object.entries(answers).map(([questionId, _]) => questionId === question.id ? [questionId, answerId] : [questionId, _]))\n    setAnswers(newAnswers)\n    compareQuestionsId(question.id, findLastestQuestionId(questions)) ? checkAnswers(newAnswers) : updateAnswers()\n  }\n\n  return (\n    <div className={classNames('d-flex w-100 h-100 flex-column align-items-center p-4')}>\n      <Pagination size=\"sm\">{questionChain()}</Pagination>\n      <div className={classNames('w-100 h-100 flex-center position-relative')}>\n        <QuestionForm question={questions[currentQuestion]}\n                      isLast={compareQuestionsId(findLastestQuestionId(questions), questions[currentQuestion].id)}\n                      applyAnswer={applyAnswer} answer={answers[questions[currentQuestion].id]}/>\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionChain;","import {IQuestion} from \"./store/quiz\";\n\nexport function initialAnswers(questions: IQuestion[]): Record<string, string> {\n  return Object.fromEntries(questions.map(it => [it.id, '']))\n}\n","import React from \"react\";\nimport {useActions} from \"../../hooks/useActions\";\nimport {quizTypes} from \"../../models/store/quiz\";\nimport {Button} from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport {useQuizSelectors} from \"../../store/selectors/quiz\";\nimport QuestionChain from \"./questionChain/questionChain\";\n\nfunction Quiz() {\n  const {getQuestions} = useActions();\n  const {questions} = useQuizSelectors();\n\n  const handleClick = (): void => {\n    getQuestions(quizTypes.GENERAL_KNOWLEDGE_FACTFULNESS);\n  }\n\n  return (\n    <div className={classNames('h-100 w-100 flex-center')}>\n      {questions.length > 0\n        ? <QuestionChain/>\n        : <Button onClick={handleClick} className={classNames(\"p-4 fs-6\")}>START</Button>}\n    </div>\n  )\n}\n\nexport default Quiz;"],"names":["PageItem","React","ref","active","disabled","className","style","activeLabel","children","props","Component","Anchor","_jsx","classNames","_jsxs","defaultProps","displayName","createButton","name","defaultValue","label","Button","First","Prev","Ellipsis","Next","Last","Pagination","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","Object","assign","Item","findLastQuestion","answers","index","values","findIndex","it","NO_VALUE","findLastestQuestionId","questions","length","id","compareQuestionsId","q1","q2","question","isLast","applyAnswer","answer","useState","answerId","setAnswerId","handleChangeAnswer","e","target","useEffect","Form","onSubmit","preventDefault","stopPropagation","options","map","i","type","text","required","checked","onChange","useQuizSelectors","currentQuestion","setCurrentQuestion","fromEntries","initialAnswers","setAnswers","checkQuiz","useActions","navigate","useNavigate","onClick","handleChooseQuestion","newAnswers","entries","questionId","_","quizTypes","checkAnswers","s","getQuestions"],"sourceRoot":""}